{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/SendMessage.js","components/Chats.js","components/Login.js","components/App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","SendMessage","msg","setMsg","e","a","preventDefault","currentUser","uid","photoURL","collection","add","text","createdAt","FieldValue","serverTimestamp","id","onSubmit","onChange","target","placeholder","type","Chats","messages","setMessages","orderBy","limit","onSnapshot","snapshot","docs","map","doc","data","handelLogout","signOut","className","onClick","key","src","alt","Login","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","App","style","fontFamily","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAKMA,G,YAAcC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAGXC,EAAOV,EAAYU,OACnBC,EAAKX,EAAYY,YCZjBC,EAAcC,IAAMC,gBAIbC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACMC,EAAUC,cAEhBC,qBAAU,WACRf,EAAKgB,oBAAmB,SAACL,GACvBC,EAAQD,GACRD,GAAW,GAEPC,GAAME,EAAQI,KAAK,eAExB,CAACN,EAAME,IAEV,IAAMK,EAAQ,CAAEP,QAEhB,OACE,kBAACR,EAAYgB,SAAb,CAAsBD,MAAOA,IACzBT,GAAWF,I,gDCcJa,MAnCf,WACE,MAAsBZ,mBAAS,IAA/B,mBAAOa,EAAP,KAAYC,EAAZ,KADqB,4CAGrB,WAA2BC,GAA3B,mBAAAC,EAAA,6DACED,EAAEE,iBADJ,EAE4BzB,EAAK0B,YAAvBC,EAFV,EAEUA,IAAKC,EAFf,EAEeA,SAFf,SAIQ3B,EAAG4B,WAAW,YAAYC,IAAI,CAClCC,KAAMV,EACNO,WACAD,MACAK,UAAWzC,IAASW,UAAU+B,WAAWC,oBAR7C,OAUEZ,EAAO,IAVT,4CAHqB,sBAgBrB,OACE,yBAAKa,GAAG,OACN,yBAAKA,GAAG,YACN,0BAAMC,SAnBS,6CAoBb,2BACElB,MAAOG,EACPgB,SAAU,SAACd,GAAD,OAAOD,EAAOC,EAAEe,OAAOpB,QACjCqB,YAAY,aACZJ,GAAG,cAEL,4BAAQK,KAAK,SAASL,GAAG,kBAAzB,YCoDKM,EA7ED,WACZ,MAAgCjC,mBAAS,IAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAEA5B,qBAAU,WACRd,EAAG4B,WAAW,YACXe,QAAQ,aACRC,MAAM,IACNC,YAAW,SAACC,GACXJ,EAAYI,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAE9C,IAEH,IAAMtC,EAAUC,cAEVsC,EAAY,uCAAG,sBAAA5B,EAAA,sEACbxB,EAAKqD,UADQ,OAGnBxC,EAAQI,KAAK,KAHM,2CAAH,qDAMlB,OACE,yBAAKqC,UAAU,cACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YAAf,8BACA,yBAAKC,QAASH,EAAcE,UAAU,cAAtC,WAKF,yBAAKnB,GAAG,YACN,yBAAKmB,UAAU,QACZZ,EAASO,KAAI,gBAAGd,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMH,EAAb,EAAaA,SAAUD,EAAvB,EAAuBA,IAAvB,OACZ,6BACE,yBACE6B,IAAKrB,EACLmB,UAAS,cACP3B,IAAQ3B,EAAK0B,YAAYC,IAAM,OAAS,aAG1C,yBAAK8B,IAAK7B,EAAU8B,IAAI,KACxB,2BAAI3B,UAgCd,kBAAC,EAAD,Q,QCvCS4B,EAhCD,WACZ,OACE,yBAAKxB,GAAG,cACN,yBAAKA,GAAG,cACN,mEAEA,yBACEmB,UAAU,sBACVC,QAAS,kBACPvD,EAAK4D,mBAAmB,IAAIrE,IAASS,KAAK6D,sBAG5C,kBAACC,EAAA,EAAD,MANF,uBASA,6BACA,gCCCOC,MAff,WACE,OACE,yBAAKC,MAAO,CAAEC,WAAY,WACxB,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAW1B,IAChC,kBAAC,IAAD,CAAOyB,KAAK,IAAIC,UAAWR,SCXvCS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1956dd11.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyABJLA0aiNy0ekdfJQo9xXBb0K-qDJPIaE\",\r\n  authDomain: \"raider-50537.firebaseapp.com\",\r\n  projectId: \"raider-50537\",\r\n  storageBucket: \"raider-50537.appspot.com\",\r\n  messagingSenderId: \"594118610383\",\r\n  appId: \"1:594118610383:web:0a4e0d9f4607901fb656ba\",\r\n  measurementId: \"G-3H22ZKTNLQ\",\r\n});\r\n\r\nconst auth = firebaseApp.auth();\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { db, auth };\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n      setLoading(false);\r\n\r\n      if (user) history.push(\"/chats\");\r\n    });\r\n  }, [user, history]);\r\n\r\n  const value = { user };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { auth, db } from \"../firebase\";\r\nimport \"./App.css\";\r\n\r\nfunction SendMessage() {\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  async function sendMessage(e) {\r\n    e.preventDefault();\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await db.collection(\"messages\").add({\r\n      text: msg,\r\n      photoURL,\r\n      uid,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n    setMsg(\"\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"box\">\r\n      <div id=\"textArea\">\r\n        <form onSubmit={sendMessage}>\r\n          <input\r\n            value={msg}\r\n            onChange={(e) => setMsg(e.target.value)}\r\n            placeholder=\"Message...\"\r\n            id=\"inputText\"\r\n          />\r\n          <button type=\"submit\" id=\"inputSubmitBtn\">\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth, db } from \"../firebase\";\r\nimport SendMessage from \"./SendMessage\";\r\nimport \"./App.css\";\r\n\r\nconst Chats = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"messages\")\r\n      .orderBy(\"createdAt\")\r\n      .limit(50)\r\n      .onSnapshot((snapshot) => {\r\n        setMessages(snapshot.docs.map((doc) => doc.data()));\r\n      });\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const handelLogout = async () => {\r\n    await auth.signOut();\r\n\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chats-page\">\r\n      <div className=\"nav-bar\">\r\n        <div className=\"logo-tab\">RAider | Community Channel</div>\r\n        <div onClick={handelLogout} className=\"logout-tab\">\r\n          Logout\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"ChatArea\">\r\n        <div className=\"msgs\">\r\n          {messages.map(({ id, text, photoURL, uid }) => (\r\n            <div>\r\n              <div\r\n                key={id}\r\n                className={`msg ${\r\n                  uid === auth.currentUser.uid ? \"sent\" : \"received\"\r\n                }`}\r\n              >\r\n                <img src={photoURL} alt=\"\" />\r\n                <p>{text}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"msgs\">\r\n        {messages.map(({ id, text, photoURL }) => (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              borderRadius: \"0 30px 30px 30px\",\r\n              boxShadow: \"0 0 10px rgb(164,164,164)\",\r\n              alignItems: \"center\",\r\n              height: \"80px\",\r\n              maxWidth: \"60%\",\r\n              padding: \" 0 10px 0 20px\",\r\n              margin: \"10px 20px\",\r\n            }}\r\n          >\r\n            <div key={id}>\r\n              <img\r\n                src={photoURL}\r\n                alt=\"\"\r\n                style={{ height: \"45px\", borderRadius: \"22.5px\" }}\r\n              />\r\n              <p style={{ display: \"inline\", alignItems: \"center\" }}>{text}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n      <SendMessage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n","import React from \"react\";\r\nimport { GoogleOutlined } from \"@ant-design/icons\";\r\nimport \"firebase/app\";\r\n\r\nimport { auth } from \"../firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <div id=\"login-page\">\r\n      <div id=\"login-card\">\r\n        <h2>Welcome to RAider Community Channel</h2>\r\n\r\n        <div\r\n          className=\"login-button google\"\r\n          onClick={() =>\r\n            auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())\r\n          }\r\n        >\r\n          <GoogleOutlined />\r\n          Sign In With Google\r\n        </div>\r\n        <br />\r\n        <br />\r\n\r\n        {/* <div\r\n          className=\"login-button facebook\"\r\n          onClick={() =>\r\n            auth.signInWithRedirect(new firebase.auth.FacebookAuthProvider())\r\n          }\r\n        >\r\n          <FacebookOutlined />\r\n          Sign In With Facebook\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { AuthProvider } from \"../contexts/AuthContext\";\n\nimport Chats from \"./Chats\";\nimport Login from \"./Login\";\n\nfunction App() {\n  return (\n    <div style={{ fontFamily: \"Avenir\" }}>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/chats\" component={Chats} />\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}